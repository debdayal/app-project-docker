version: "2"
services:
  mongodb:
    image: debdayal/mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - app-network
    environment:
      - "constraint:node==earth"

  config-server:
    image: debdayal/config-server
    networks:
      - app-network

  eureka-server:
    image: debdayal/eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    ports:
      - "8761:8761"
    networks:
      - app-network
    depends_on:
      - config-server
    entrypoint: ./wait-for-it.sh config-server:8888  -- ./run.sh

  user-service:
    image: debdayal/user-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    networks:
      - app-network
    depends_on:
      - mongodb
      - eureka-server
      - config-server
    entrypoint: ./wait-for-it.sh eureka-server:8761  -- ./run.sh

  gateway:
    image: debdayal/gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - "constraint:node==venus"
    networks:
      - app-network
    depends_on:
      - eureka-server
      - config-server
    entrypoint: ./wait-for-it.sh eureka-server:8761  -- ./run.sh

  api-load-balancer:
    image: dockercloud/haproxy
    ports:
      - "8001:1936"
    depends_on:
      - gateway
    links:
      - gateway
    environment:
      - ADDITIONAL_SERVICES=app:gateway
      - "constraint:node==venus"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  user-ui:
    image: debdayal/user-ui
    depends_on:
      - api-load-balancer
    environment:
      - "constraint:node==sun"
    networks:
      - app-network

  ui-load-balancer:
    image: dockercloud/haproxy
    depends_on:
      - user-ui
    links:
      - user-ui
    environment:
      - ADDITIONAL_SERVICES=app:user-ui
      - "constraint:node==sun"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "80:80"
      - "8002:1936"
    networks:
      - app-network

  docker-ui:
    image: uifd/ui-for-docker
    privileged: true
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - "affinity:container!=*docker-ui*"
    networks:
      - app-network

volumes:
  mongodb-data:
    driver: local

networks:
  app-network:
    driver: overlay
    ipam:
      driver: default
      config:
        - subnet: 192.178.0.0/16
